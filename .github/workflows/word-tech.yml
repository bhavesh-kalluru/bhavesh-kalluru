name: Update Word + Tech Term of the Day

on:
  schedule:
    - cron: "0 6 * * *"   # runs 06:00 UTC daily
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Generate today's content (Word, Tech, Quote)
        shell: bash
        run: |
          python - <<'PY'
          import datetime as dt, json, re
          from pathlib import Path

          root = Path(".").resolve()
          readme = root / "README.md"
          terms_file = root / "terms.json"    # optional: words + tech live here
          quotes_file = root / "quotes.json"  # optional: quotes can live here

          # ---------- helpers ----------
          def rotate(items, offset=0):
              if not items:
                  return None
              # deterministic day-based rotation (cycles through the whole list)
              idx = (dt.date.today().toordinal() + offset) % len(items)
              return items[idx]

          def upsert_block(text, start_tag, end_tag, body):
              pattern = re.compile(rf"(?s){re.escape(start_tag)}.*?{re.escape(end_tag)}")
              replacement = f"{start_tag}\n{body}\n{end_tag}"
              if pattern.search(text):
                  return pattern.sub(replacement, text)
              # If markers missing, append at end
              return text.rstrip() + f"\n\n{replacement}\n"

          # ---------- load pools (with safe fallbacks) ----------
          words, techs, quotes = [], [], []

          if terms_file.exists():
              try:
                  data = json.loads(terms_file.read_text(encoding="utf-8"))
                  words = data.get("words", [])
                  techs = data.get("tech", [])
              except Exception:
                  pass

          if quotes_file.exists():
              try:
                  quotes = json.loads(quotes_file.read_text(encoding="utf-8"))
              except Exception:
                  pass

          if not words:
              words = [
                  {"term":"Serendipity","meaning":"Finding something good without looking for it"},
                  {"term":"Alacrity","meaning":"Brisk, cheerful readiness"},
                  {"term":"Tenacity","meaning":"Persistent determination to keep going"},
              ]
          if not techs:
              techs = [
                  {"term":"RAG","meaning":"Retrieval-Augmented Generation: fetch facts, then generate"},
                  {"term":"Vector DB","meaning":"Store embeddings for semantic search/RAG"},
                  {"term":"PEFT","meaning":"Parameter-Efficient Fine-Tuning for large models"},
              ]
          if not quotes:
              quotes = [
                  {"text":"Stay hungry. Stay foolish.","author":"Steve Jobs"},
                  {"text":"Make it work, make it right, make it fast.","author":"Kent Beck"},
                  {"text":"It always seems impossible until it’s done.","author":"Nelson Mandela"},
                  {"text":"The secret of getting ahead is getting started.","author":"Mark Twain"},
                  {"text":"Whether you think you can or you can’t, you’re right.","author":"Henry Ford"},
              ]

          # pick today’s entries (offsets avoid same index if lists share length)
          w = rotate(words, offset=0)   or {"term":"Hello","meaning":"World"}
          t = rotate(techs,  offset=7)  or {"term":"AI","meaning":"Makes tools smarter"}
          q = rotate(quotes, offset=13) or {"text":"Keep going.","author":"Unknown"}

          word_block = f"**{w['term']}** — {w['meaning']}"
          tech_block = f"**{t['term']}** — {t['meaning']}"
          quote_line = f'> “{q["text"]}” — {q.get("author","")}'.rstrip(" — ")

          readme.touch(exist_ok=True)
          text = readme.read_text(encoding="utf-8")

          text = upsert_block(text, "<!-- DAILY:WORD -->",  "<!-- END:WORD -->",  word_block)
          text = upsert_block(text, "<!-- DAILY:TECH -->",  "<!-- END:TECH -->",  tech_block)
          text = upsert_block(text, "<!-- DAILY:QUOTE -->", "<!-- END:QUOTE -->", quote_line)

          readme.write_text(text, encoding="utf-8")
          print("README updated (Word/Tech/Quote).")
          PY

      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Commit & push if changed
        run: |
          if git diff --quiet; then
            echo "No changes to commit."
          else
            git add -A
            git commit -m "chore: daily README update $(date -u +'%Y-%m-%d')"
            git push
          fi
